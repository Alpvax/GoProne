plugins {
    id "fabric-loom" version "${loom_version}"
    id "maven-publish"
    id "idea"
}


var dependencyProjects = [
        project(":Common"),
]
ext { dependencyProjects }
dependencyProjects.forEach {
    project.evaluationDependsOn(it.path)
}

repositories {
    maven {
        name = 'Terraformers'
        url = "https://maven.terraformersmc.com/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_mcversion}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    dependencyProjects.forEach {
        implementation it
    }

    implementation 'com.electronwill.night-config:core:3.6.6'
    implementation 'com.electronwill.night-config:toml:3.6.6'
    modImplementation "curse.maven:forgeconfigfabric-547434:${forgeconfigfabric_version}"

    // Configured
//    modLocalRuntime "curse.maven:configured-fabric-667378:4166864"
    // Mod Menu
//    modLocalRuntime "com.terraformersmc:modmenu:6.2.2"
}

tasks.withType(JavaCompile) {
    dependencyProjects.forEach {
        source(it.sourceSets.main.allSource)
    }
}
//jar {
//    from sourceSets.main.output
//    dependencyProjects.forEach {
//        from it.sourceSets.main.output
//    }
//
//    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//}

loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
