plugins {
    id "idea"
    id "eclipse"
    id "maven-publish"
    id "net.minecraftforge.gradle" version "[6.0,6.2)"
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}


var dependencyProjects = [
        project(":Common"),
]
ext { dependencyProjects }
dependencyProjects.forEach {
    project.evaluationDependsOn(it.path)
}

minecraft {
    mappings channel: 'parchment', version: "${(project.hasProperty("parchment_forge_prefix") ? "${parchment_forge_prefix}-": "") + parchment_version}-${minecraft_version}"
    
    // When true, this property will have all Eclipse/IntelliJ IDEA run configurations run the "prepareX" task for the given run configuration before launching the game.
    // In most cases, it is not necessary to enable.
    // enableEclipsePrepareRuns = true
    // enableIdeaPrepareRuns = true

    // This property allows configuring Gradle's ProcessResources task(s) to run on IDE output locations before launching the game.
    // It is REQUIRED to be set to true for this template to function.
    // See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
    copyIdeResources = true

    // When true, this property will add the folder name of all declared run configurations to generated IDE run configurations.
    // The folder name can be set on a run configuration using the "folderName" property.
    // By default, the folder name of a run configuration is the name of the Gradle project containing it.
    // generateRunFolders = true
    
    if (project.hasProperty("forge_ats_enabled") && project.findProperty("forge_ats_enabled").toBoolean()) {
        // This property enables access transformers for use in development.
        // They will be applied to the Minecraft artifact.
        // The access transformer file can be anywhere in the project.
        // However, it must be at "META-INF/accesstransformer.cfg" in the final mod jar to be loaded by Forge.
        // This default location is a best practice to automatically put the file in the right place in the final jar.
        // See https://docs.minecraftforge.net/en/latest/advanced/accesstransformers/ for more information.
        accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")
        project.logger.debug("Forge Access Transformers are enabled for this project.")
    }

    runs {
        configureEach {
            workingDirectory project.file("run")
            ideaModule "${rootProject.name}.${project.name}.main"
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"
        }
        client {
            taskName "Client"
            mods {
                modClientRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        server {
            taskName "Server"
            args '--nogui'
            mods {
                modServerRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        gameTestServer {
            taskName "Server (GUI)"
            property 'forge.enabledGameTestNamespaces', mod_id
            mods {
                modServerRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }
        data {
            args "--mod", mod_id, "--all", "--output", file("../Common/src/generated/resources/"), "--existing", file("src/main/resources/")
            taskName "Data"
            mods {
                modDataRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    dependencyProjects.forEach {
        compileOnly it
    }

    //implementation fg.deobf("curse.maven:configured-457570:4462894")
}


jar {
    from sourceSets.main.output
    dependencyProjects.forEach {
        from it.sourceSets.main.output
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    finalizedBy("reobfJar")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
